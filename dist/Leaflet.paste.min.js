/*! Leaflet.paste - v0.1.0 - 2012-10-11
* http://github.com/thegreat/Leaflet.paste/
* Copyright (c) 2012 Affinity Bridge; Licensed GPLv3
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>. */

var Wkt=function(){return{delimiter:" ",isArray:function(e){return!!e&&e.constructor==Array},Wkt:function(e){var t,n,r;t=function(e,t){return e.substring(0,t.length)===t},n=function(e,t){return e.substring(e.length-t.length)===t},r=function(e,r){r=r||" ";while(t(e,r))e=e.substring(1);while(n(e,r))e=e.substring(0,e.length-1);return e},this.delimiter=Wkt.delimiter,this.regExes={typeStr:/^\s*(\w+)\s*\(\s*(.*)\s*\)\s*$/,spaces:/\s+|\+/,numeric:/-*\d+\.*\d+/,comma:/\s*,\s*/,parenComma:/\)\s*,\s*\(/,doubleParenComma:/\)\s*\)\s*,\s*\(\s*\(/,trimParens:/^\s*\(?(.*?)\)?\s*$/},this.isCollection=function(){switch(this.type.slice(0,5)){case"multi":return!0;case"polyg":return!0;default:return!1}},this.components=undefined,this.fromObject=function(e){var t=this.deconstruct.call(this,e);return this.components=t.components,this.isRectangle=t.isRectangle||!1,this.type=t.type,this},this.toObject=function(e){return this.construct[this.type].call(this,e)},this.read=function(e){var t;t=this.regExes.typeStr.exec(e);if(!t)throw console.log("Invalid WKT string provided to read()"),{name:"WKTError",message:"Invalid WKT string provided to read()"};return this.type=t[1].toLowerCase(),this.base=t[2],this.ingest[this.type]&&(this.components=this.ingest[this.type].apply(this,[this.base])),this.components},this.write=function(e){var t,n,r;e=e||this.components,n=[],n.push(this.type.toUpperCase()+"(");for(t=0;t<e.length;t+=1){this.isCollection()&&t>0&&n.push(",");if(!this.extract[this.type])return null;r=this.extract[this.type].apply(this,[e[t]]),this.isCollection()?n.push("("+r+")"):(n.push(r),t!==e.length-1&&n.push(","))}return n.push(")"),n.join("")},this.extract={point:function(e){return e.x+this.delimiter+e.y},multipoint:function(e){var t,n=[];for(t=0;t<e.length;t+=1)n.push(this.extract.point.apply(this,[e[t]]));return n.join(",")},linestring:function(e){return this.extract.point.apply(this,[e])},multilinestring:function(e){var t,n=[];for(t=0;t<e.length;t+=1)n.push("("+this.extract.linestring.apply(this,[e[t]])+")");return n.join(",")},polygon:function(e){return this.extract.multipoint.apply(this,[e])},multipolygon:function(e){var t,n=[];for(t=0;t<e.length;t+=1)n.push("("+this.extract.polygon.apply(this,[e[t]])+")");return n.join(",")}},this.ingest={point:function(e){var t=r(e).split(this.regExes.spaces);return[{x:parseFloat(this.regExes.numeric.exec(t[0])[0]),y:parseFloat(this.regExes.numeric.exec(t[1])[0])}]},multipoint:function(e){var t,n,i;n=[],i=r(e).split(this.regExes.comma);for(t=0;t<i.length;t+=1)n.push(this.ingest.point.apply(this,[i[t]]));return n},linestring:function(e){var t,n,r;n=this.ingest.multipoint.apply(this,[e]),r=[];for(t=0;t<n.length;t+=1)r=r.concat(n[t]);return r},multilinestring:function(e){var t,n,i,s;n=[],s=r(e).split(this.regExes.parenComma);for(t=0;t<s.length;t+=1)i=s[t].replace(this.regExes.trimParens,"$1"),n.push(this.ingest.linestring.apply(this,[i]));return n},polygon:function(e){var t,n,i,s,o,u;u=r(e).split(this.regExes.parenComma),i=[];for(t=0;t<u.length;t+=1){o=u[t].replace(this.regExes.trimParens,"$1").split(this.regExes.comma),s=[];for(n=0;n<o.length;n+=1)s.push({x:parseFloat(o[n].split(this.regExes.spaces)[0]),y:parseFloat(o[n].split(this.regExes.spaces)[1])});i.push(s)}return i},multipolygon:function(e){var t,n,i,s;n=[],s=r(e).split(this.regExes.doubleParenComma);for(t=0;t<s.length;t+=1)i=s[t].replace(this.regExes.trimParens,"$1"),n.push(this.ingest.polygon.apply(this,[i]));return n},geometrycollection:function(e){console.log("The geometrycollection WKT type is not yet supported.")}},e&&typeof e=="string"?this.read(e):this.fromGeometry&&this.fromGeometry(e)}}}();Wkt.Wkt.prototype.isRectangle=!1,Wkt.Wkt.prototype.construct={point:function(e,t){var n=t||this.components;return n instanceof Array&&(n=n[0]),L.marker(this.coordsToLatLng(n),e)},multipoint:function(e){var t=[],n=this.components,r;for(var i=0,s=n.length;i<s;i++)t.push(this.construct.point.call(this,e,n[i]));return L.featureGroup(t,e)},linestring:function(e,t){var n=t||this.components,r=this.coordsToLatLngs(n);return L.polyLine(r)},multilinestring:function(e){var t=this.components,n=this.coordsToLatLngs(t,1);return L.multiPolyline(n)},polygon:function(e){var t=this.components,n=this.coordsToLatLngs(t,1);return L.polygon(n)},multipolygon:function(e){var t=this.components,n=this.coordsToLatLngs(t,2);return L.multiPolygon(n)}},L.Util.extend(Wkt.Wkt.prototype,{coordsToLatLngs:L.GeoJSON.coordsToLatLngs,coordsToLatLng:function(e,t){var n=t?e.x:e.y,r=t?e.y:e.x;return L.latLng(n,r,!0)}}),L.WKT=L.GeoJSON.extend({initialize:function(e,t){L.GeoJSON.prototype.initialize.call(this,e,t)},addData:function(e){var t=this.options,n=new Wkt.Wkt(e);if(t.filter&&!t.filter(n.components))return;var r=n.toObject(this.options);return r.wkt=n,this.resetStyle(r),this.addLayer(r)}}),L.wkt=function(e,t){return new L.WKT(e,t)},L.Control.Paste=L.Control.extend({options:{position:"topright",title:"Paste objects",wkt:{title:"WKT"},geojson:{title:"GeoJSON"},submit:"Add"},initialize:function(e){L.Util.extend(this.options,e)},onAdd:function(e){var t="leaflet-control-paste",n=L.DomUtil.create("div",t);return L.DomEvent.disableClickPropagation(n),this.handler=new L.Handler.Paste(e,this.options),this.handler.on("activated deactivated",this._toggleModal,this),this.handler.on("error",this._displayError,this),this._createButton(this.options.title,t+"-button"+" "+this.options.position,n,this.handler.toggle,this.handler),this._modal=this._createForm(t+"-form",n,this.handler.submit,this.handler),n},_toggleModal:function(){L.DomUtil.hasClass(this._modal,"hidden")?L.DomUtil.removeClass(this._modal,"hidden"):(L.DomUtil.addClass(this._modal,"hidden"),this._messageBox.innerHTML="")},_displayError:function(e){this._messageBox.innerHTML=e.message},_createButton:function(e,t,n,r,i){var s=L.DomUtil.create("a",t,n);return s.href="#",s.title=e,L.DomEvent.addListener(s,"click",L.DomEvent.stopPropagation).addListener(s,"click",L.DomEvent.preventDefault).addListener(s,"click",r,i),s},_createForm:function(e,t,n,r){var i=this.options,s=L.DomUtil.create("div","hidden",t),o=L.DomUtil.create("div","message-box",s),u=L.DomUtil.create("form",null,s),a=L.DomUtil.create("textarea",null,u),f=L.DomUtil.create("select",null,u),l=L.DomUtil.create("input",null,u);return i.wkt&&this._createFormatOption("wkt",i.wkt.title,f),i.geojson&&this._createFormatOption("geojson",i.geojson.title,f),a.rows=10,f.multiple=!1,l.type="submit",l.value=this.options.submit,L.DomEvent.on(u,"submit",L.DomEvent.stop),L.DomEvent.on(u,"submit",n,r),L.DomEvent.on(u,"submit",function(){a.value=""}),this._messageBox=o,s},_createFormatOption:function(e,t,n){var r=L.DomUtil.create("option",null,n);r.value=e,r.text=t}}),L.Control.paste=function(e){return new L.Control.Paste(e)},L.Map.mergeOptions({pasteControl:!1}),L.Map.addInitHook(function(){this.options.pasteControl&&(this.pasteControl=L.Control.paste(),this.addControl(this.pasteControl))}),L.Handler.Paste=L.Handler.extend({includes:L.Mixin.Events,initialize:function(e,t){this._map=e},addHooks:function(){this._map&&this.fire("activated")},removeHooks:function(){this._map&&this.fire("deactivated")},toggle:function(){this.enabled()?this.disable():this.enable()},submit:function(e){var t=e.target[0].value,n=e.target[1].value;try{this._process(t,n),this.disable()}catch(e){var r=e;e instanceof Error&&(r={message:e.message}),this.fire("error",e)}},_process:function(e,t){var n;if(!e)throw new Error("You must add a valid geometry.");if(!L.Handler.Paste.hasOwnProperty(t))throw new Error("Unknown data type: %s.",t);n=L.Handler.Paste[t].call(this,e),center=n.getBounds().getCenter(),this._map.addLayer(n),this._map.panTo(center)}}),L.Util.extend(L.Handler.Paste,{wkt:function(e){return L.wkt(e)},geojson:function(e){return L.geoJSON(e)}});